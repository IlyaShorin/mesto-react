{"version":3,"sources":["images/header__logo.svg","images/edit-button.svg","images/add-button.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","header__logo","alt","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","json","obj","method","body","JSON","stringify","name","about","title","link","id","avatar","authorization","Card","card","onClick","onCardClick","type","likes","length","Main","useState","userName","setUserName","userTitle","setUserTitle","userAvatar","setUserAvatar","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","result","data","catch","err","console","log","style","background","onEditAvatar","onEditProfile","editButton","onAddPlace","addButton","map","i","key","Footer","PopupWithForm","isOpen","onClose","children","button","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePlacePopupOpen","setIsDeletePlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","value","placeholder","required","minLength","maxLength","pattern","autoFocus","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1fe4e1b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header__logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-button.58afbe73.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-button.bdfb8ebb.svg\";","import React from \"react\";\r\nimport header__logo from \"../images/header__logo.svg\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={header__logo} alt=\"Место\" className=\"header__logo\" />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n"," class Api{\r\n  constructor({baseUrl, headers}){\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n  getInitialCards(){\r\n    return fetch(`${this._baseUrl}/cards`,{\r\n      headers: this._headers\r\n    })\r\n    .then(res=> res.json())\r\n  }\r\n  getUserInfo(){\r\n    return fetch(`${this._baseUrl}/users/me`,{\r\n      headers:this._headers\r\n    })\r\n    .then(res=> res.json())\r\n  }\r\n  updateUserInfo(obj){\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        name: obj.name,\r\n        about: obj.title\r\n      }),\r\n      headers:this._headers\r\n    }).then(res=> res.json());\r\n  }\r\n  addNewCard(obj){\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: obj.name,\r\n        link: obj.link\r\n      }),\r\n      headers:this._headers\r\n    }).then(res => res.json())\r\n  }\r\n  likeCard(id){\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers:this._headers\r\n    }).then(res => res.json())\r\n  }\r\n  unLikeCard(id){\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers:this._headers\r\n    }).then(res => res.json())\r\n  }\r\n  deleteCard(id){\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers:this._headers\r\n    }).then(res => res.json())\r\n  }\r\n  updateAvatar(obj){\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        avatar: obj,\r\n      }),\r\n      headers:this._headers\r\n    }).then(res=> res.json());\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\r\n  headers: {\r\n    authorization: \"7d44fa7e-04ef-41d7-b07e-efc6bd06cf53\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\nfunction handleClick(){\r\n  props.onCardClick(props.card)\r\n}\r\n  return (\r\n    <li className=\"cards__item\">\r\n      <img src={props.card.link} alt={props.card.alt} className=\"cards__image\" onClick={handleClick}/>\r\n      <button type=\"button\" className=\"cards__delete-button\"></button>\r\n      <div className=\"cards__caption\">\r\n        <p className=\"cards__title\">{props.card.name}</p>\r\n        <div className=\"cards__like\">\r\n          <button type=\"button\" className=\"cards__button\"></button>\r\n          <p className=\"cards__counter\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport editButton from \"../images/edit-button.svg\";\r\nimport addButton from \"../images/add-button.svg\";\r\nimport api from \"../utils/api\";\r\nimport Card from \"./Card\";\r\n\r\nconst Main = (props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userTitle, setUserTitle] = useState(\"\");\r\n  const [userAvatar, setUserAvatar] = useState(\"\");\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([result, data]) => {\r\n        setUserName(result.name);\r\n        setUserTitle(result.about);\r\n        setUserAvatar(result.avatar);\r\n        setCards(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <section className=\"profile__avatar\" style={{ background: `url('${userAvatar}') 0 0 / 100% 100% no-repeat` }}>\r\n          <div className=\"profile__avatar-overlay\" onClick={props.onEditAvatar}></div>\r\n        </section>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__alignment\">\r\n            <h1 className=\"profile__name\">{userName}</h1>\r\n            <button onClick={props.onEditProfile} type=\"button\" className=\"profile__button-edit\">\r\n              <img src={editButton} alt=\"Кнопка редактирования\" className=\"profile__button-edit-pencil\" />\r\n            </button>\r\n          </div>\r\n          <p className=\"profile__title\">{userTitle}</p>\r\n        </div>\r\n        <button onClick={props.onAddPlace} type=\"button\" className=\"profile__button-add\">\r\n          <img src={addButton} alt=\"Кнопка добавления\" className=\"profile__button-add-plus\" />\r\n        </button>\r\n      </section>\r\n      <ul className=\"cards\">\r\n        {cards.map((card, i) => (\r\n          <Card key={i} card={card} onCardClick={props.onCardClick} />\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n};\r\nexport default Main;\r\n","import React from 'react'\r\n\r\nconst Footer = () =>{\r\n  return(\r\n    <footer className=\"footer\">\r\n        <p className=\"footer__copyright\">&copy; 2020 Илья Шорин</p>\r\n      </footer>\r\n  )\r\n}\r\nexport default Footer","import React from \"react\";\r\n\r\nconst PopupWithForm = (props) => {\r\n  return (\r\n    <section className={`popup popup_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n      <div className={\"popup__container\"}>\r\n        <button type=\"button\" className={`popup__button-close popup__button-close_${props.name}`} onClick={props.onClose}></button>\r\n        <form name=\"popup_form\" className={`form form-${props.name}`}>\r\n          <h2 className={\"popup__heading\"}>{props.title}</h2>\r\n          {props.children}\r\n          <button type=\"submit\" className={`popup__button-save popup__button-save-${props.name}`}>\r\n            {props.button}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\n\r\nconst ImagePopup = (props) => {\r\n  return (\r\n    <section className={`popup popup_figure ${props.card ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"popup__container popup__container_figure\">\r\n        <button type=\"button\" className=\"popup__button-close popup__button-close_figure\" onClick={props.onClose}></button>\r\n        <figure className=\"popup__figure\">\r\n          <img src={props.card ? props.card.link : \"\"} alt={props.card ? props.card.name : \"\"} className=\"popup__image\" />\r\n          <figcaption className=\"popup__caption\">{props.card ? props.card.name : \"\"}</figcaption>\r\n        </figure>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ImagePopup;\r\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePlacePopupOpen(false);\n    setSelectedCard(null)\n  }\n  function handleCardClick(value){\n    setSelectedCard(value)\n  }\n  return (\n    <div>\n      <Header />\n      <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={handleCardClick} />\n      <Footer />\n      <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} button=\"Сохранить\">\n        <input type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input-avatar-link\" id=\"popup__input-avatar-link\" required />\n        <span className=\"popup__input_type_error\" id=\"popup__input-avatar-link-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} button=\"Сохранить\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"popup__input popup__input-profile-name\"\n          id=\"popup__input-profile-name\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n          pattern=\"^[A-Za-zА-Яа-яЁё\\s -]+$\"\n          placeholder=\"Ваше имя\"\n          autoFocus\n        />\n        <span className=\"popup__input_type_error\" id=\"popup__input-profile-name-error\"></span>\n        <input type=\"text\" name=\"title\" className=\"popup__input popup__input-title\" id=\"popup__input-title\" required minLength=\"2\" maxLength=\"200\" placeholder=\"Ваш род деятельности\" />\n        <span className=\"popup__input_type_error\" id=\"popup__input-title-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm name=\"cards\" title=\"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} button=\"Добавить\">\n        <input type=\"text\" name=\"name\" placeholder=\"Название\" className=\"popup__input popup__input-card-name\" id=\"popup__input-card-name\" required minLength=\"1\" maxLength=\"30\" autoFocus />\n        <span className=\"popup__input_type_error\" id=\"popup__input-card-name-error\"></span>\n        <input type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" className=\"popup__input popup__input-link\" id=\"popup__input-link\" required />\n        <span className=\"popup__input_type_error\" id=\"popup__input-link-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm name=\"delete-card\" title=\"Вы уверены?\" isOpen={isDeletePlacePopupOpen} onClose={closeAllPopups} button=\"Удалить\"></PopupWithForm>\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}></ImagePopup>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}